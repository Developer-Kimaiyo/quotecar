{"version":3,"sources":["contexts/drawer/drawer.context.tsx","contexts/drawer/drawer.provider.tsx","components/Drawer/Drawer.tsx","containers/LayoutContainer/Header/MobileDrawer.tsx","containers/LayoutContainer/Header/MobileHeader.tsx"],"names":["DrawerContext","createContext","initialState","isOpen","reducer","state","action","type","DrawerProvider","children","useReducer","dispatch","Provider","value","Drawer","className","closeButton","closeButtonStyle","drawerHandler","toggleHandler","open","width","placement","props","onClose","trim","handler","level","duration","onClick","style","display","defaultProps","DrawerMenuItems","id","intlLabelId","label","href","MobileDrawer","useContext","React","useCallback","autoHide","map","item","key","NavLink","MobileHeader","to","HOME_PAGE","src","alt"],"mappings":"0KAEaA,EAAgBC,wBAAc,ICArCC,EAAe,CACnBC,QAAQ,GAGV,SAASC,EAAQC,EAAYC,GAC3B,OAAQA,EAAOC,MACb,IAAK,SACH,OAAO,2BACFF,GADL,IAEEF,QAASE,EAAMF,SAEnB,QACE,OAAOE,GAGN,IAAMG,EAA0C,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAC7CC,qBAAWN,EAASF,GADyB,mBAChEG,EADgE,KACzDM,EADyD,KAEvE,OACE,kBAACX,EAAcY,SAAf,CAAwBC,MAAO,CAAER,QAAOM,aACrCF,I,2BCLDK,G,OAA+C,SAAC,GAW/C,IAVLC,EAUI,EAVJA,UACAN,EASI,EATJA,SACAO,EAQI,EARJA,YACAC,EAOI,EAPJA,iBACAC,EAMI,EANJA,cACAC,EAKI,EALJA,cACAC,EAII,EAJJA,KACAC,EAGI,EAHJA,MACAC,EAEI,EAFJA,UACGC,EACC,oIACJ,OACE,kBAAC,WAAD,KACE,kBAAC,IAAD,eACEH,KAAMA,EACNI,QAASL,EACTJ,UAAW,iBAAUA,GAAwB,IAAKU,OAClDJ,MAAOA,EACPC,UAAWA,EACXI,SAAS,EACTC,MAAO,KACPC,SAAS,OACLL,GAEHP,GACC,yBACED,UAAU,gBACVc,QAASV,EACTW,MAAOb,GAEND,GAIJP,GAEH,yBACEM,UAAU,kBACVe,MAAO,CAAEC,QAAS,gBAClBF,QAASV,GAERD,MAMTJ,EAAOkB,aAAe,CACpBX,MAAO,QACPC,UAAW,QAGER,Q,2BCtDTmB,EAAkB,CACtB,CACEC,GAAI,EACJC,YAAa,cACbC,MAAO,OACPC,KAAM,MAmDKC,EA/C+B,WAAO,IAAD,EACtBC,qBAAgBvC,GAApCK,EAD0C,EAC1CA,MAAOM,EADmC,EACnCA,SAETQ,EAAgBqB,IAAMC,aAAY,WACtC9B,EAAS,CACPJ,KAAM,aAEP,CAACI,IAEJ,OACE,kBAAC,EAAD,CACEU,MAAM,QACNH,cACE,kBAAC,IAAD,KACE,+BACA,+BACA,gCAGJE,KAAMf,EAAMF,OACZgB,cAAeA,EACfH,YACE,kBAAC,IAAD,KACE,kBAAC,IAAD,QAIJ,kBAAC,aAAD,CAAY0B,UAAQ,GAClB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACGT,EAAgBU,KAAI,SAACC,GAAD,OACnB,kBAAC,IAAD,CAAgBC,IAAKD,EAAKV,IACxB,kBAACY,EAAA,EAAD,CACEjB,QAASV,EACTkB,KAAMO,EAAKP,KACXD,MAAOQ,EAAKR,MACZrB,UAAU,8B,iBChBbgC,UA1BmC,SAACxB,GAAW,IACpDR,EAAcQ,EAAdR,UAER,OACE,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAA0BA,UAAWA,GACnC,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMiC,GAAIC,KACR,yBACEC,IAAI,8DACJC,IAAI","file":"static/js/17.0bb53c80.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport const DrawerContext = createContext({});\n","import React, { useReducer } from 'react';\nimport { DrawerContext } from './drawer.context';\nconst initialState = {\n  isOpen: false,\n};\n\nfunction reducer(state: any, action: any) {\n  switch (action.type) {\n    case 'TOGGLE':\n      return {\n        ...state,\n        isOpen: !state.isOpen,\n      };\n    default:\n      return state;\n  }\n}\nexport const DrawerProvider: React.FunctionComponent = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <DrawerContext.Provider value={{ state, dispatch }}>\n      {children}\n    </DrawerContext.Provider>\n  );\n};\n","import React, { Fragment } from \"react\";\nimport RcDrawer from \"rc-drawer\";\nimport \"rc-drawer/assets/index.css\";\n\ntype DrawerProps = {\n  className?: string;\n  children?: any;\n  closeButton?: any;\n  closeButtonStyle?: any;\n  drawerHandler: any;\n  toggleHandler: any;\n  open: any;\n  width?: string;\n  placement?: \"left\" | \"right\" | \"top\" | \"bottom\";\n};\n\nconst Drawer: React.FunctionComponent<DrawerProps> = ({\n  className,\n  children,\n  closeButton,\n  closeButtonStyle,\n  drawerHandler,\n  toggleHandler,\n  open,\n  width,\n  placement,\n  ...props\n}) => {\n  return (\n    <Fragment>\n      <RcDrawer\n        open={open}\n        onClose={toggleHandler}\n        className={`drawer ${className ? className : \"\"}`.trim()}\n        width={width}\n        placement={placement}\n        handler={false}\n        level={null}\n        duration=\".4s\"\n        {...props}\n      >\n        {closeButton && (\n          <div\n            className=\"drawer__close\"\n            onClick={toggleHandler}\n            style={closeButtonStyle}\n          >\n            {closeButton}\n          </div>\n        )}\n\n        {children}\n      </RcDrawer>\n      <div\n        className=\"drawer__handler\"\n        style={{ display: \"inline-block\" }}\n        onClick={toggleHandler}\n      >\n        {drawerHandler}\n      </div>\n    </Fragment>\n  );\n};\n\nDrawer.defaultProps = {\n  width: \"300px\",\n  placement: \"left\",\n};\n\nexport default Drawer;\n","import React, { useContext } from \"react\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport Drawer from \"../../../components/Drawer/Drawer\";\nimport NavLink from \"../../../components/NavLink/NavLink\";\nimport { CloseIcon } from \"../../../components/AllSvgIcon\";\nimport { DrawerContext } from \"../../../contexts/drawer/drawer.context\";\n\nimport {\n  HamburgerIcon,\n  DrawerContentWrapper,\n  DrawerClose,\n  DrawerMenu,\n  DrawerMenuItem,\n} from \"./Header.style\";\n\nconst DrawerMenuItems = [\n  {\n    id: 1,\n    intlLabelId: \"navLinkHome\",\n    label: \"Home\",\n    href: \"/\",\n  },\n];\n\nconst MobileDrawer: React.FunctionComponent = () => {\n  const { state, dispatch } = useContext<any>(DrawerContext);\n  // Toggle drawer\n  const toggleHandler = React.useCallback(() => {\n    dispatch({\n      type: \"TOGGLE\",\n    });\n  }, [dispatch]);\n\n  return (\n    <Drawer\n      width=\"316px\"\n      drawerHandler={\n        <HamburgerIcon>\n          <span />\n          <span />\n          <span />\n        </HamburgerIcon>\n      }\n      open={state.isOpen}\n      toggleHandler={toggleHandler}\n      closeButton={\n        <DrawerClose>\n          <CloseIcon />\n        </DrawerClose>\n      }\n    >\n      <Scrollbars autoHide>\n        <DrawerContentWrapper>\n          <DrawerMenu>\n            {DrawerMenuItems.map((item) => (\n              <DrawerMenuItem key={item.id}>\n                <NavLink\n                  onClick={toggleHandler}\n                  href={item.href}\n                  label={item.label}\n                  className=\"drawer_menu_item\"\n                />\n              </DrawerMenuItem>\n            ))}\n          </DrawerMenu>\n        </DrawerContentWrapper>\n      </Scrollbars>\n    </Drawer>\n  );\n};\n\nexport default MobileDrawer;\n","import React from \"react\";\nimport { DrawerProvider } from \"../../../contexts/drawer/drawer.provider\";\nimport MobileDrawer from \"./MobileDrawer\";\nimport {\n  MobileHeaderWrapper,\n  MobileHeaderInnerWrapper,\n  DrawerWrapper,\n  LogoWrapper,\n  Logo,\n} from \"./Header.style\";\n\nimport { HOME_PAGE } from \"../../../constants/navigation\";\nimport { Link } from \"react-router-dom\";\n\ntype MobileHeaderProps = {\n  className?: string;\n};\n\nconst MobileHeader: React.FC<MobileHeaderProps> = (props) => {\n  const { className } = props;\n\n  return (\n    <DrawerProvider>\n      <MobileHeaderWrapper>\n        <MobileHeaderInnerWrapper className={className}>\n          <DrawerWrapper>\n            <MobileDrawer />\n          </DrawerWrapper>\n          <LogoWrapper>\n            <Logo>\n              <Link to={HOME_PAGE}>\n                <img\n                  src=\"https://pro-theme.com/html/sokolcov/transcargo/img/logo.png\"\n                  alt=\"pickbazar-admin\"\n                />\n              </Link>\n            </Logo>\n          </LogoWrapper>\n        </MobileHeaderInnerWrapper>\n      </MobileHeaderWrapper>\n    </DrawerProvider>\n  );\n};\n\nexport default MobileHeader;\n"],"sourceRoot":""}